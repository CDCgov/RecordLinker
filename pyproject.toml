[build-system]
requires = ["setuptools>=42", "wheel", "setuptools-scm[toml]>=6.0.1"]
build-backend = "setuptools.build_meta"

[project]
name = "RecordLinker"
dynamic = ["version"]
description = "An API for linking health care records using Patient PII"
authors = [
    { name = "Brandon Mader", email = "brandon@skylight.digital" },
    { name = "Dan Paseltiner", email = "dan@skylight.digital" },
    { name = "Marcelle Goggins", email = "marcelle@skylight.digital" },
    { name = "Eric Buckley", email = "ericbuckley@skylight.digital" },
    { name = "Alex Hayward", email = "alex.hayward@skylight.digital" },
    { name = "Cason Brinson", email = "cbrinson@rise8.us" },
    { name = "Derek Dombek", email = "ddombek@rise8.us" },
]
license = { file = "LICENSE" }
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.13"
dependencies = [
    "uvicorn",
    "fastapi",
    "pydantic",
    "pydantic-settings",
    "python-dateutil==2.9.0.post0",
    "sqlalchemy",
    "rapidfuzz",
    # Observability
    "python-json-logger",
    "asgi-correlation-id",
    # Database drivers
    "psycopg2-binary", # PostgreSQL
    "PyMySQL",         # MySQL & MariaDB
    "cryptography",    # MySQL & MariaDB dependency
    "pyodbc",          # Microsoft SQL Server
    # Normalization
    "phonenumbers",
]

[project.optional-dependencies]
dev = [
    # development-only dependencies here
    "fastapi[standard]",
    "ruff",
    "mypy",
    "types-python-dateutil",
    "faker",
    # Testing
    "pytest>=8.3",
    "pytest-cov",
    "pytest-env",
    # Load testing
    "locust",
    "ijson",
    # Observability
    "opentelemetry-api",
    "opentelemetry-sdk",
    # Documentation
    "mkdocs",
    "mkdocs-mermaid2-plugin",
    "mkdocs-material",
]
prod = [
    # List any additional production-only dependencies here
]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.package-data]
recordlinker = ["assets/*"]

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.setuptools_scm]
write_to = "src/recordlinker/_version.py"
version_scheme = "post-release"
local_scheme = "dirty-tag"
fallback_version = "0.0.0"

[tool.ruff]
exclude = [".git", ".pytest_cache", "__pycache__", "docs"]
line-length = 100
indent-width = 4
target-version = "py310"
show-fixes = true

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "I",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
] # Defaults

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["D"]
"tests/*.py" = [
    "D102",
    "D103",
] # Ignore the public docstring rules in test files

[tool.ruff.lint.isort]
# The following settings reduce the number of changes from reorder-python-imports
force-single-line = true
order-by-type = false

[tool.pytest.ini_options]
testpaths = ["tests/unit"]
pythonpath = ["src", "tests/unit"]
filterwarnings = [
    "ignore:typing.io is deprecated, import directly from typing instead:DeprecationWarning",
]
env = ["DB_URI=sqlite:///:memory:", "INITIAL_ALGORITHMS=", "TUNING_ENABLED=true"]

[tool.coverage.run]
omit = [
    # Omit the generated version file from coverage
    "src/recordlinker/_version.py",
]

[tool.mypy]
files = ["src"]
mypy_path = ["src"]
