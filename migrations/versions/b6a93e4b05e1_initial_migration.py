"""Initial migration

Revision ID: b6a93e4b05e1
Revises: 
Create Date: 2025-07-02 20:22:11.538613+00:00

"""
from typing import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

from recordlinker.config import settings
from recordlinker.models.base import TZDateTime

# revision identifiers, used by Alembic.
revision: str = 'b6a93e4b05e1'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('algorithm',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('label', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('algorithm_context', sa.JSON(), nullable=False),
    sa.Column('passes', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_index(op.f('ix_algorithm_is_default'), 'algorithm', ['is_default'], unique=False)
    op.create_table('mpi_person',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('reference_id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mpi_person_reference_id'), 'mpi_person', ['reference_id'], unique=True)
    op.create_table('mpi_patient',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('person_id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), nullable=True),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('external_patient_id', sa.String(length=255), nullable=True),
    sa.Column('external_person_id', sa.String(length=255), nullable=True),
    sa.Column('external_person_source', sa.String(length=100), nullable=True),
    sa.Column('reference_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['mpi_person.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mpi_patient_person_id'), 'mpi_patient', ['person_id'], unique=False)
    op.create_index(op.f('ix_mpi_patient_reference_id'), 'mpi_patient', ['reference_id'], unique=True)
    op.create_table('mpi_blocking_value',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('patient_id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), nullable=False),
    sa.Column('blockingkey', sa.SmallInteger(), nullable=False),
    sa.Column('value', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['mpi_patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_blocking_value_blockingkey_value_patient', 'mpi_blocking_value', ['blockingkey', 'value', 'patient_id'], unique=False)
    op.create_index(op.f('ix_mpi_blocking_value_patient_id'), 'mpi_blocking_value', ['patient_id'], unique=False)
    # ### end Alembic commands ###
    if settings.tuning_enabled:
        op.create_table('tuning_job',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', name='status_enum', native_enum=False), nullable=False),
        sa.Column('params', sa.JSON(), nullable=False),
        sa.Column('results', sa.JSON(), nullable=True),
        sa.Column('started_at', TZDateTime(), nullable=False),
        sa.Column('finished_at', TZDateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_mpi_blocking_value_patient_id'), table_name='mpi_blocking_value')
    op.drop_index('ix_blocking_value_blockingkey_value_patient', table_name='mpi_blocking_value')
    op.drop_table('mpi_blocking_value')
    op.drop_index(op.f('ix_mpi_patient_reference_id'), table_name='mpi_patient')
    op.drop_index(op.f('ix_mpi_patient_person_id'), table_name='mpi_patient')
    op.drop_table('mpi_patient')
    op.drop_index(op.f('ix_mpi_person_reference_id'), table_name='mpi_person')
    op.drop_table('mpi_person')
    op.drop_index(op.f('ix_algorithm_is_default'), table_name='algorithm')
    op.drop_table('algorithm')
    # ### end Alembic commands ###
    if settings.tuning_enabled:
        op.drop_table('tuning_job')
